default:
  image: python:3-slim
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  APP_VERSION: "beta"
  MOUNT_POINT: /builds/$CI_PROJECT_PATH/mnt

stages:
  - test
  - build
  - deploy
  # - image
  - transfer

test:
  stage: test
  script: 
   - pip install -r testing_requirements.txt
   - nosetests --with-coverage --cover-package=apiserver

build:sites:
  cache: {}
  stage: build
  script:
    - pip install -r requirements.txt
    - python frontend/createStatic.py
    - echo "static web content has been created"
  artifacts:
    paths:
      - site

pages:
  stage: deploy
  image: alpine:latest
  dependencies:
    - build:sites
  script:
  # - docker run -d --name my_container -p https://rybicki1.pages.jsc.fz-juelich.de/datacatalog/ -d $CI_REGISTRY_IMAGE:$APP_VERSION
  - mkdir public
  - cp -r site/* public/
  - echo "Deployment finished. Missing API server"
  artifacts:
    paths:
    - public

deploy:
  stage: deploy
  variables:
    OS_AUTH_TYPE: v3applicationcredential
    OS_AUTH_URL: https://hdf-cloud.fz-juelich.de:5000
    OS_IDENTITY_API_VERSION: 3
    OS_REGION_NAME: "HDFCloud"
    OS_INTERFACE: public
  script:
    - echo "Doing nothing for now"

# build:image:
#   cache: {}
#   stage: image
#   image: docker:latest
#   only:
#   - mptest
#   script:
#   - echo "Deployment starting..."
  # - mkdir -p "$MOUNT_POINT"
  # - docker build --no-cache=true --pull -f ./apiserver/Dockerfile -t $CI_REGISTRY_IMAGE:$APP_VERSION .

transfer_image:
  stage: transfer
  image: docker:19.03.12
  services:
    - name: docker:19.03.12-dind
      alias: docker
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - echo "Job token:" $CI_JOB_TOKEN
    - echo "Deploy user:" $CI_DEPLOY_USER
    - echo $CI_REGISTRY
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker build --no-cache=true --pull -f ./apiserver/Dockerfile -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  # only:
  #   - mptest
