default:
  image: python:3-slim
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  APP_VERSION: "beta"

stages:
  - test
  - build
  - deploy

test:
  stage: test
  script: 
   - pip install -r testing_requirements.txt
   - nosetests --with-coverage --cover-package=apiserver

build:sites:
  cache: {}
  stage: build
  script:
    - pip install -r requirements.txt
    - python frontend/createStatic.py
    - echo "static web content has been created"
  artifacts:
    paths:
      - site

pages:
  stage: deploy
  image: alpine:latest
  dependencies:
    - build:sites
  script:
  - mkdir public
  - cp -r site/* public/
  - echo "Deployment finished. Missing API server"
  artifacts:
    paths:
    - public

deploy:
  stage: deploy
  variables:
    OS_AUTH_TYPE: v3applicationcredential
    OS_AUTH_URL: https://hdf-cloud.fz-juelich.de:5000
    OS_IDENTITY_API_VERSION: 3
    OS_REGION_NAME: "HDFCloud"
    OS_INTERFACE: public
  script:
    - echo "Doing nothing for now"
    - pip install python-openstackclient
    - openstack image list
    - openstack server create --flavor s1 --image 149a65b5-aeb8-499f-aaa6-ec966bd28dd6 pipeline-inst
    # - reassign floating ip
    # - login on the new instance pipeline-inst
    # - sudo docker network create net #net is the docker internal network.. put it in a Variable?
    # - sudo docker-compose up -d
    # - docker build --no-cache=true --pull -f ./apiserver/Dockerfile -t api-test . #pull from $CI_REGISTRY
    # - sudo docker run --name api-test-cloud --network net -e VIRTUAL_HOST="zam10028.zam.kfa-juelich.de" -e LETSENCRYPT_HOST="zam10028.zam.kfa-juelich.de" -d api-test
    # - openstack server destroy pipeline-inst #old
  only:
    - mptest


# This should be an automatic push of the docker image into gitLab container repository
# Currently not working due to docker login failing because of firewall issues
transfer_image:
  stage: transfer
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --no-cache=true --pull -f ./apiserver/Dockerfile -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
